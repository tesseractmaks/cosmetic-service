version: "1"

services:
  cosmetic_app:
    build:
      ./
    container_name: cosmetic-app
    ports:
      - "8000:8000"
    restart: always
    stdin_open: true
    tty: true
    environment:
      POSTGRES_DB: "cosmetic_db"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    depends_on:
      cosmetic_db:
        condition: service_healthy

  cosmetic_db:
    build: ./db_build
    container_name: cosmetic-db
    environment:
      POSTGRES_HOST: "cosmetic_db"
      POSTGRES_DB: "cosmetic_db"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    ports:
      - "5431:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d cosmetic_db -U cosmetic" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_cosmetic_db:/var/lib/postgresql/data

  nginx_cosmetic_api:
    image: nginx:latest
    container_name: nginx-cosmetic-api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-cosmetic.rule=Host(`api-cosmetic.tesseractmaks.tech`)"
    depends_on:
      cosmetic_app:
        condition: service_started

  redis:
    image: redis:7
    container_name: cosmetic-redis
    restart: always
    ports:
      - 6377:6379

volumes:
  pg_cosmetic_db:

networks:
  default:
    name: proxynet
    external: true




